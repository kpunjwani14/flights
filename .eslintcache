[{"/home/shehzman/dbhw4/db-hw4/src/App.js":"1","/home/shehzman/dbhw4/db-hw4/src/Checkin.js":"2","/home/shehzman/dbhw4/db-hw4/src/Booking.js":"3","/home/shehzman/dbhw4/db-hw4/src/ResTable.js":"4","/home/shehzman/dbhw4/db-hw4/src/Search.js":"5","/home/shehzman/dbhw4/db-hw4/src/reportWebVitals.js":"6","/home/shehzman/dbhw4/db-hw4/src/Homepage.js":"7","/home/shehzman/dbhw4/db-hw4/src/BookingModal.js":"8","/home/shehzman/dbhw4/db-hw4/src/index.js":"9","/home/shehzman/dbhw4/db-hw4/src/Navigation.js":"10","/home/shehzman/dbhw4/db-hw4/src/Boarding.js":"11","/home/shehzman/dbhw4/db-hw4/src/Example.js":"12"},{"size":843,"mtime":1607367642759,"results":"13","hashOfConfig":"14"},{"size":2364,"mtime":1607405065414,"results":"15","hashOfConfig":"14"},{"size":125528,"mtime":1607533006288,"results":"16","hashOfConfig":"14"},{"size":3566,"mtime":1607512087527,"results":"17","hashOfConfig":"14"},{"size":4837,"mtime":1607511949070,"results":"18","hashOfConfig":"14"},{"size":362,"mtime":1606682649705,"results":"19","hashOfConfig":"14"},{"size":16641,"mtime":1607405065475,"results":"20","hashOfConfig":"14"},{"size":1942,"mtime":1607405065409,"results":"21","hashOfConfig":"14"},{"size":500,"mtime":1606682649683,"results":"22","hashOfConfig":"14"},{"size":1086,"mtime":1607367642820,"results":"23","hashOfConfig":"14"},{"size":2028,"mtime":1607405065405,"results":"24","hashOfConfig":"14"},{"size":1542,"mtime":1607405065428,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"ghprut",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/shehzman/dbhw4/db-hw4/src/App.js",["55"],"import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport Homepage from './Homepage'\nimport Booking from './Booking'\nimport Navigation from './Navigation'\nimport Search from './Search'\nimport Checkin from './Checkin'\nimport Boarding from './Boarding'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n\n        <Navigation />\n        <Switch>\n          <Route path=\"/\" exact component={Homepage} />\n          <Route path=\"/checkin\" exact component={Checkin} />\n          <Route path=\"/checkout\" exact component={Booking} />\n          <Route path=\"/search\" exact component={Search} />\n          <Route path=\"/board\" exact component={Boarding} />\n\n\n        </Switch>\n\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n",["56","57"],"/home/shehzman/dbhw4/db-hw4/src/Checkin.js",["58","59"],"import React from 'react';\nimport './Checkin.css';\nimport { Form, Row, Col, Button, Card } from 'react-bootstrap';\nimport './Example'\nimport Example from './Example';\n\nclass Checkin extends React.Component {\n    render() {\n        return (\n            <div>\n                <div class='content'>\n                    <h1>Check-in</h1>\n                    <Card style={{ width: '90%' }}>\n                        <Card.Img style={{ height: '20rem' }} variant=\"top\" src=\"https://images.unsplash.com/photo-1522153588464-5dba4c1983c4?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=675&q=80\" />\n                        <Card.Body>\n                            <Card.Text style={{ fontSize: '15px' }}>\n                                Check-in is available starting 24 hours before your scheduled departure.\n      </Card.Text>\n                            <Form noValidate validated>\n                                <Form.Row>\n                                    <Form.Group className='col-md-4' as={Col} controlId=\"formGridEmail\">\n                                        <Form.Label>Ticket number</Form.Label>\n                                        <Form.Control pattern=\"\\d+\" required type=\"text\" />\n                                    </Form.Group>\n\n                                    <Form.Group className='col-md-4' as={Col} controlId=\"formGridPassword\">\n                                        <Form.Label>First name</Form.Label>\n                                        <Form.Control required type=\"text\" />\n                                    </Form.Group>\n\n                                    <Form.Group className='col-md-4' as={Col} controlId=\"formGridPassword\">\n                                        <Form.Label>Last name</Form.Label>\n                                        <Form.Control required type=\"text\" />\n                                    </Form.Group>\n                                </Form.Row>\n                                <Form.Row>\n                                    <Col>\n                                        <Example />\n                                    </Col>\n                                </Form.Row>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default Checkin","/home/shehzman/dbhw4/db-hw4/src/Booking.js",[],"/home/shehzman/dbhw4/db-hw4/src/ResTable.js",[],"/home/shehzman/dbhw4/db-hw4/src/Search.js",[],"/home/shehzman/dbhw4/db-hw4/src/reportWebVitals.js",[],"/home/shehzman/dbhw4/db-hw4/src/Homepage.js",["60","61"],"import React from 'react';\nimport { Form, Col, Card, Button, InputGroup, FormControl, Dropdown, Carousel } from 'react-bootstrap';\nimport './Homepage.css';\nimport { Redirect } from 'react-router-dom';\n\nclass HomePage extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n\n            validated: false,\n            isValid: false,\n            tripType: 'One Way',\n            dateTo: '',\n            params: {\n                adult: 1,\n                child: 0,\n                infant: 0,\n                placeTo: '',\n                placeFrom: '',\n                econ: 'econ',\n                dateFrom: this.getDate()\n\n            }\n\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n    handleSubmit(event) {\n\n        const form = event.currentTarget;\n\n        if (form.checkValidity() === false) {\n\n            event.stopPropagation();\n        }\n        else {\n            this.setState({ isValid: true })\n        }\n\n        event.preventDefault();\n        this.setState({ validated: true }, () => {\n            console.log(this.state)\n        })\n\n    }\n    getDate() {\n        const x = new Date()\n        var mon = (x.getMonth() + 1) % 13\n        var dat = x.getDate()\n        if (dat < 10)\n            dat = '0' + dat\n        if (mon < 10)\n            mon = '0' + mon\n\n        return x.getFullYear() + '-' + (mon) + '-' + (dat)\n\n    }\n    getQueryParams() {\n        const j = this.state.params\n        let param = ''\n        if (this.state.tripType == 'Round-Trip')\n            param += ('dateTo' + '=' + this.state.dateTo + '&')\n        for (let i in this.state.params) {\n\n            param += (i + '=' + j[i] + '&')\n        }\n\n        param = param.slice(0, -1)\n\n\n        return encodeURI(param)\n    }\n    render() {\n        return (\n\n            <div>\n                {this.state.isValid && <Redirect\n                    to={{\n                        pathname: \"/search\",\n                        search: this.getQueryParams(),\n\n                    }}\n                />}\n\n                <Carousel >\n                    <Carousel.Item className='car'>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://images.unsplash.com/photo-1530521954074-e64f6810b32d?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1050&q=80\"\n                            alt=\"First slide\"\n                        />\n\n                        <Carousel.Caption>\n                            <h2 className='car-text car-heading'>Check-in</h2>\n                            <h4 className='car-text'>Check-in at your convenience and print your boarding pass from the comfort of your home.</h4>\n                        </Carousel.Caption>\n\n                    </Carousel.Item>\n                    <Carousel.Item className='car'>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://images.unsplash.com/photo-1483450388369-9ed95738483c?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1050&q=80\"\n                            alt=\"Third slide\"\n                        />\n\n                        <Carousel.Caption>\n                            <h2 className='car-text car-heading'>COVID-19</h2>\n                            <h3 className='car-text'>Risk of COVID-19 exposure on our flights is almost non-existent</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item className='car'>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://images.unsplash.com/photo-1518317507427-5346735246ab?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1050&q=80\"\n                            alt=\"Third slide\"\n                        />\n\n                        <Carousel.Caption>\n                            <h2 className='car-text' style={{ fontSize: '50px' }}>Holiday Deals</h2>\n                            <h3 className='car-text' style={{ fontSize: '30px' }}>Buy more, get more</h3>\n                            <h3 className='car-text' style={{ fontSize: '20px' }}>Enter one of the following promo codes at checkout</h3>\n                            <h5 className='car-text' style={{ fontSize: '18px' }}>flash - 15% off your flight. Offer expires 12/18 </h5>\n                            <h5 className='car-text' style={{ fontSize: '18px' }}>holiday - 10% off your flight. Offer expires 12/31 </h5>\n                            <h5 className='car-text' style={{ fontSize: '18px' }}>winter - 5% off your flight. Offer expires 1/30</h5>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n                <section>\n\n\n                    <Card className='card'>\n                        <Card.Body>\n                            <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n                                <Form.Row className=\"row\">\n                                    <Col xs=\"auto\" className=\"my-2\">\n                                        <Form.Label className=\"mr-sm-1\" htmlFor=\"inlineFormCustomSelect\" srOnly>\n                                        </Form.Label>\n                                        <Form.Control\n                                            as=\"select\"\n                                            className=\"mr-sm-2\"\n                                            id=\"inlineFormCustomSelect\"\n                                            custom\n                                            required\n                                            value={this.state.tripType}\n                                            onChange={(e) => { this.setState(prevState => ({ tripType: e.target.value })) }}\n\n                                        >\n                                            <option value=\"One Way\">One Way</option>\n                                            <option value=\"Round-Trip\">Round Trip</option>\n                                        </Form.Control>\n                                    </Col>\n\n                                    <Col xs=\"auto\" className=\"my-2\">\n                                        <Dropdown  >\n                                            <Dropdown.Toggle id=\"dropdown-basic\" >\n                                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-person\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <path fill-rule=\"evenodd\" d=\"M10 5a2 2 0 1 1-4 0 2 2 0 0 1 4 0zM8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm6 5c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\" />\n                                                </svg>\n                                            </Dropdown.Toggle>\n\n                                            <Dropdown.Menu flip={false}>\n\n\n                                                <Form.Row>\n                                                    <Col xs={5}>\n                                                        <Form.Label className=\"lab\" for=\"adults\">Adults</Form.Label>\n                                                    </Col>\n                                                    <Col xs={6}>\n                                                        <Form.Control type=\"number\" id=\"adults\" name=\"adults\"\n                                                            min=\"1\" max=\"5\" value={this.state.params.adult} required onChange={(e) => { this.setState(prevState => ({ params: { ...prevState.params, adult: e.target.value } })) }}></Form.Control>\n                                                    </Col>\n\n                                                </Form.Row>\n                                                <Form.Row>\n                                                    <Col xs={5}>\n                                                        <Form.Label className=\"lab\" for=\"children\" name=\"children\">Kids</Form.Label>\n                                                    </Col>\n                                                    <Col xs={6}>\n                                                        <Form.Control value={this.state.params.child} onChange={(e) => { this.setState(prevState => ({ params: { ...prevState.params, child: e.target.value } })) }} type=\"number\" id=\"tentacles\" name=\"tentacles\"\n                                                            min=\"0\" max=\"5\"></Form.Control>\n                                                    </Col>\n                                                </Form.Row>\n\n                                                <Form.Row>\n                                                    <Col xs={5}>\n                                                        <Form.Label className=\"lab\" for=\"infants\" name=\"infants\">Infants</Form.Label>\n                                                    </Col>\n                                                    <Col xs={6}>\n                                                        <Form.Control value={this.state.params.infant} onChange={(e) => { this.setState(prevState => ({ params: { ...prevState.params, infant: e.target.value } })) }} type=\"number\" id=\"tentacles\" name=\"tentacles\"\n                                                            min=\"0\" max=\"5\"></Form.Control>\n                                                    </Col>\n                                                </Form.Row>\n\n\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n                                    </Col>\n\n                                    <Col xs=\"auto\" className=\"my-2\">\n                                        <Form.Label className=\"mr-sm-1\" htmlFor=\"inlineFormCustomSelect\" srOnly>\n                                        </Form.Label>\n                                        <Form.Control\n                                            as=\"select\"\n                                            className=\"mr-sm-2\"\n                                            id=\"inlineFormCustomSelect\"\n                                            custom\n                                            required\n                                            value={this.state.params.econ}\n                                            onChange={(e) => { this.setState(prevState => ({ params: { ...prevState.params, econ: e.target.value } })) }}\n\n                                        >\n                                            <option value=\"econ\">Economy</option>\n                                            <option value=\"business\">Business</option>\n\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Row>\n\n\n                                <Form.Row className=\"row\">\n                                    <Col lg={5}>\n                                        <InputGroup className=\"mb-2\">\n                                            <FormControl placeholder=\"Leaving From (City, State/Country)\" required\n                                                onChange={(e) => { this.setState(prevState => ({ params: { ...prevState.params, placeFrom: e.target.value } })) }} />\n                                            <InputGroup.Append>\n                                                <InputGroup.Text><svg width=\".7em\" height=\".8em\" viewBox=\"0 0 16 16\" class=\"bi bi-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\n                                                </svg></InputGroup.Text>\n                                            </InputGroup.Append>\n                                        </InputGroup>\n                                    </Col>\n                                    <Col lg={5}>\n                                        <InputGroup className=\"mb-2\">\n                                            <FormControl placeholder=\"Going To (City, State/Country)\" required\n                                                onChange={(e) => { this.setState(prevState => ({ params: { ...prevState.params, placeTo: e.target.value } })) }} />\n                                            <InputGroup.Append>\n                                                <InputGroup.Text><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-geo-alt\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <path fill-rule=\"evenodd\" d=\"M12.166 8.94C12.696 7.867 13 6.862 13 6A5 5 0 0 0 3 6c0 .862.305 1.867.834 2.94.524 1.062 1.234 2.12 1.96 3.07A31.481 31.481 0 0 0 8 14.58l.208-.22a31.493 31.493 0 0 0 1.998-2.35c.726-.95 1.436-2.008 1.96-3.07zM8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10z\" />\n                                                    <path fill-rule=\"evenodd\" d=\"M8 8a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm0 1a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\n                                                </svg></InputGroup.Text>\n                                            </InputGroup.Append>\n                                        </InputGroup>\n\n                                    </Col>\n                                </Form.Row>\n                                <Form.Row className=\"row\">\n                                    <Col md={4}>\n\n\n                                        <Form.Control\n                                            onChange={(e) => { this.setState(prevState => ({ params: { ...prevState.params, dateFrom: e.target.value } })) }}\n                                            className='dates' required type=\"date\" name=\"date from\" placeholder=\"One Way\"\n                                            min={this.getDate()}\n                                        />\n\n\n\n                                    </Col>\n                                    {this.state.tripType === 'Round-Trip' &&\n                                        <>\n                                            <Col md={.2}  >\n                                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-arrow-right-circle-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <path fill-rule=\"evenodd\" d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-11.5.5a.5.5 0 0 1 0-1h5.793L8.146 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L10.293 8.5H4.5z\" />\n                                                </svg>\n                                            </Col>\n                                            <Col md={4}>\n\n                                                <Form.Group controlId=\"date to\">\n\n                                                    <Form.Control\n                                                        onChange={(e) => { this.setState(prevState => ({ dateTo: e.target.value })) }}\n                                                        className='dates' required type=\"date\" name=\"date to\"\n                                                        min={this.state.params.dateFrom}\n                                                    />\n\n\n                                                </Form.Group>\n                                            </Col></>}\n\n                                </Form.Row>\n                                <Form.Row>\n                                    <Col>\n                                        <Button className='button' type='submit' variant=\"outline-primary\"><svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-search\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path fill-rule=\"evenodd\" d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\n                                            <path fill-rule=\"evenodd\" d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\n                                        </svg> Search</Button>{' '}\n                                    </Col>\n                                </Form.Row>\n                            </Form>\n\n                        </Card.Body>\n                    </Card>\n                </section>\n            </div >\n        )\n    }\n}\n\nexport default HomePage","/home/shehzman/dbhw4/db-hw4/src/BookingModal.js",["62"],"import React from 'react';\nimport './Checkin.css';\nimport { Button, Modal } from 'react-bootstrap';\nimport { useState } from \"react\";\nimport { Redirect } from 'react-router-dom'\n\nfunction BookingModal() {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const [red, setRed] = useState(false)\n    const handleClick = () => {\n        setRed(true)\n    }\n\n    return (\n        <>\n            {red && <Redirect to='/' />}\n            <div>\n                <Button onClick={() => setShow(true)} size=\"lg\" variant=\"outline-success\">Complete Booking\n                                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-arrow-right\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fill-rule=\"evenodd\" d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\" />\n                    </svg>\n                </Button>{' '}\n            </div>\n\n            <Modal\n                centered\n                show={show}\n                onHide={() => setShow(false)}\n                dialogClassName=\"modal-90w\"\n                aria-labelledby=\"example-custom-modal-styling-title\"\n            >\n                <Modal.Header closeButton onHide={handleClick}>\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\n                        Success!\n            </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p>\n                        You have successfully booked your flight.\n                    </p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClick}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default BookingModal","/home/shehzman/dbhw4/db-hw4/src/index.js",[],"/home/shehzman/dbhw4/db-hw4/src/Navigation.js",[],"/home/shehzman/dbhw4/db-hw4/src/Boarding.js",["63","64"],"/home/shehzman/dbhw4/db-hw4/src/Example.js",["65","66","67"],{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":12},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"68","severity":1,"message":"76","line":3,"column":16,"nodeType":"70","messageId":"71","endLine":3,"endColumn":19},{"ruleId":"68","severity":1,"message":"77","line":3,"column":26,"nodeType":"70","messageId":"71","endLine":3,"endColumn":32},{"ruleId":"78","severity":1,"message":"79","line":62,"column":33,"nodeType":"80","messageId":"81","endLine":62,"endColumn":35},{"ruleId":"82","severity":1,"message":"83","line":63,"column":32,"nodeType":"80","messageId":"84","endLine":63,"endColumn":33},{"ruleId":"68","severity":1,"message":"85","line":9,"column":11,"nodeType":"70","messageId":"71","endLine":9,"endColumn":22},{"ruleId":"68","severity":1,"message":"76","line":3,"column":16,"nodeType":"70","messageId":"71","endLine":3,"endColumn":19},{"ruleId":"68","severity":1,"message":"77","line":3,"column":26,"nodeType":"70","messageId":"71","endLine":3,"endColumn":32},{"ruleId":"68","severity":1,"message":"86","line":3,"column":10,"nodeType":"70","messageId":"71","endLine":3,"endColumn":14},{"ruleId":"68","severity":1,"message":"76","line":3,"column":16,"nodeType":"70","messageId":"71","endLine":3,"endColumn":19},{"ruleId":"68","severity":1,"message":"87","line":3,"column":21,"nodeType":"70","messageId":"71","endLine":3,"endColumn":24},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["88"],"no-negated-in-lhs",["89"],"'Row' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'handleClose' is assigned a value but never used.","'Form' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]